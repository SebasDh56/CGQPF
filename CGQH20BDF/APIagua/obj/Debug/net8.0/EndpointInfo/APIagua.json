{
  "openapi": "3.0.1",
  "info": {
    "title": "APIagua",
    "version": "1.0"
  },
  "paths": {
    "/api/Empleado": {
      "get": {
        "tags": [
          "Empleado"
        ],
        "operationId": "GetAllEmpleados",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Empleado"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Empleado"
        ],
        "operationId": "CreateEmpleado",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empleado"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empleado"
                }
              }
            }
          }
        }
      }
    },
    "/api/Empleado/{id}": {
      "get": {
        "tags": [
          "Empleado"
        ],
        "operationId": "GetEmpleadoById",
        "parameters": [
          {
            "name": "idempleado",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empleado"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Empleado"
        ],
        "operationId": "UpdateEmpleado",
        "parameters": [
          {
            "name": "idempleado",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empleado"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Empleado"
        ],
        "operationId": "DeleteEmpleado",
        "parameters": [
          {
            "name": "idempleado",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Factura": {
      "get": {
        "tags": [
          "Factura"
        ],
        "operationId": "GetAllFacturas",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Factura"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Factura"
        ],
        "operationId": "CreateFactura",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Factura"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factura"
                }
              }
            }
          }
        }
      }
    },
    "/api/Factura/{id}": {
      "get": {
        "tags": [
          "Factura"
        ],
        "operationId": "GetFacturaById",
        "parameters": [
          {
            "name": "idfactura",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factura"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Factura"
        ],
        "operationId": "UpdateFactura",
        "parameters": [
          {
            "name": "idfactura",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Factura"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Factura"
        ],
        "operationId": "DeleteFactura",
        "parameters": [
          {
            "name": "idfactura",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Incidencium": {
      "get": {
        "tags": [
          "Incidencium"
        ],
        "operationId": "GetAllIncidencia",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incidencium"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incidencium"
        ],
        "operationId": "CreateIncidencium",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incidencium"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidencium"
                }
              }
            }
          }
        }
      }
    },
    "/api/Incidencium/{id}": {
      "get": {
        "tags": [
          "Incidencium"
        ],
        "operationId": "GetIncidenciumById",
        "parameters": [
          {
            "name": "idincidencia",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incidencium"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Incidencium"
        ],
        "operationId": "UpdateIncidencium",
        "parameters": [
          {
            "name": "idincidencia",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incidencium"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Incidencium"
        ],
        "operationId": "DeleteIncidencium",
        "parameters": [
          {
            "name": "idincidencia",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Medidor": {
      "get": {
        "tags": [
          "Medidor"
        ],
        "operationId": "GetAllMedidors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Medidor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Medidor"
        ],
        "operationId": "CreateMedidor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Medidor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medidor"
                }
              }
            }
          }
        }
      }
    },
    "/api/Medidor/{id}": {
      "get": {
        "tags": [
          "Medidor"
        ],
        "operationId": "GetMedidorById",
        "parameters": [
          {
            "name": "idmedidor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medidor"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Medidor"
        ],
        "operationId": "UpdateMedidor",
        "parameters": [
          {
            "name": "idmedidor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Medidor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Medidor"
        ],
        "operationId": "DeleteMedidor",
        "parameters": [
          {
            "name": "idmedidor",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Pago": {
      "get": {
        "tags": [
          "Pago"
        ],
        "operationId": "GetAllPagos",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pago"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pago"
        ],
        "operationId": "CreatePago",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pago"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pago"
                }
              }
            }
          }
        }
      }
    },
    "/api/Pago/{id}": {
      "get": {
        "tags": [
          "Pago"
        ],
        "operationId": "GetPagoById",
        "parameters": [
          {
            "name": "idpago",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pago"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Pago"
        ],
        "operationId": "UpdatePago",
        "parameters": [
          {
            "name": "idpago",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pago"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Pago"
        ],
        "operationId": "DeletePago",
        "parameters": [
          {
            "name": "idpago",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/Usuario": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "operationId": "GetAllUsuarios",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Usuario"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Usuario"
        ],
        "operationId": "CreateUsuario",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          }
        }
      }
    },
    "/api/Usuario/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "operationId": "GetUsuarioById",
        "parameters": [
          {
            "name": "idusuario",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "operationId": "UpdateUsuario",
        "parameters": [
          {
            "name": "idusuario",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "operationId": "DeleteUsuario",
        "parameters": [
          {
            "name": "idusuario",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empleado": {
        "type": "object",
        "properties": {
          "idEmpleado": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "cargo": {
            "type": "string",
            "nullable": true
          },
          "fechaContratacion": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Factura": {
        "type": "object",
        "properties": {
          "idFactura": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuario": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idLectura": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaEmision": {
            "type": "string",
            "format": "date"
          },
          "fechaVencimiento": {
            "type": "string",
            "format": "date"
          },
          "montoTotal": {
            "type": "number",
            "format": "double"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "detalleConsumo": {
            "type": "string",
            "nullable": true
          },
          "idLecturaNavigation": {
            "$ref": "#/components/schemas/Lectura"
          },
          "idUsuarioNavigation": {
            "$ref": "#/components/schemas/Usuario"
          },
          "pagos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pago"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Incidencium": {
        "type": "object",
        "properties": {
          "idIncidencia": {
            "type": "integer",
            "format": "int32"
          },
          "idUsuario": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idMedidor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tipoIncidencia": {
            "type": "string",
            "nullable": true
          },
          "fechaReporte": {
            "type": "string",
            "format": "date"
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "detalleResolucion": {
            "type": "string",
            "nullable": true
          },
          "idMedidorNavigation": {
            "$ref": "#/components/schemas/Medidor"
          },
          "idUsuarioNavigation": {
            "$ref": "#/components/schemas/Usuario"
          }
        },
        "additionalProperties": false
      },
      "Lectura": {
        "type": "object",
        "properties": {
          "idLectura": {
            "type": "integer",
            "format": "int32"
          },
          "idMedidor": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaLectura": {
            "type": "string",
            "format": "date"
          },
          "lecturaAnterior": {
            "type": "number",
            "format": "double"
          },
          "lecturaActual": {
            "type": "number",
            "format": "double"
          },
          "consumo": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "facturas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Factura"
            },
            "nullable": true
          },
          "idMedidorNavigation": {
            "$ref": "#/components/schemas/Medidor"
          }
        },
        "additionalProperties": false
      },
      "Medidor": {
        "type": "object",
        "properties": {
          "idMedidor": {
            "type": "integer",
            "format": "int32"
          },
          "numeroSerie": {
            "type": "string",
            "nullable": true
          },
          "fechaInstalacion": {
            "type": "string",
            "format": "date"
          },
          "tipoMedidor": {
            "type": "string",
            "nullable": true
          },
          "ubicacion": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "fechaUltimaRevision": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "idUsuario": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idUsuarioNavigation": {
            "$ref": "#/components/schemas/Usuario"
          },
          "incidencia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incidencium"
            },
            "nullable": true
          },
          "lecturas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lectura"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Pago": {
        "type": "object",
        "properties": {
          "idPago": {
            "type": "integer",
            "format": "int32"
          },
          "idFactura": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaPago": {
            "type": "string",
            "format": "date"
          },
          "montoPagado": {
            "type": "number",
            "format": "double"
          },
          "metodoPago": {
            "type": "string",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "nullable": true
          },
          "idFacturaNavigation": {
            "$ref": "#/components/schemas/Factura"
          },
          "recibos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recibo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Recibo": {
        "type": "object",
        "properties": {
          "idRecibo": {
            "type": "integer",
            "format": "int32"
          },
          "idPago": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fechaEmision": {
            "type": "string",
            "format": "date"
          },
          "monto": {
            "type": "number",
            "format": "double"
          },
          "metodoEntrega": {
            "type": "string",
            "nullable": true
          },
          "idPagoNavigation": {
            "$ref": "#/components/schemas/Pago"
          }
        },
        "additionalProperties": false
      },
      "Usuario": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "nullable": true
          },
          "apellido": {
            "type": "string",
            "nullable": true
          },
          "direccion": {
            "type": "string",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "nullable": true
          },
          "correo": {
            "type": "string",
            "nullable": true
          },
          "tipoUsuario": {
            "type": "string",
            "nullable": true
          },
          "estadoServicio": {
            "type": "string",
            "nullable": true
          },
          "fechaRegistro": {
            "type": "string",
            "format": "date"
          },
          "facturas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Factura"
            },
            "nullable": true
          },
          "incidencia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incidencium"
            },
            "nullable": true
          },
          "medidors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Medidor"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}